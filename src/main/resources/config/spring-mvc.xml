<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
    <context:component-scan base-package="com.mcin"/>

    <!-- 异常处理 -->
    <bean id="exceptionResolver" class="com.mcin.handler.ExceptionHandler"/>

    <!-- 定义返回的视图 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- json 注意Map对象转2次会有\"的问题-->
    <!-- 处理动态资源 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- 返回JSON 为String开启这个  -->
                <ref bean="stringHttpMessageConverter" />
                <!-- 返回Map List为JSON 开启这个 -->
                <!-- <ref bean="mappingJacksonHttpMessageConverter" /> -->
            </list>
        </property>


        <property name="webBindingInitializer">
            <!-- 解决表单String转Date问题 -->
            <ref bean="dateConverter"/>
        </property>
        <!--  <property name="webBindingInitializer">
             去除源字符串前后空格
             <ref bean="stringTrimConverter"/>
         </property> -->
    </bean>

    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" index="0"></constructor-arg>
        <!--避免出现乱码 -->
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>


    <bean id="dateConverter" class="com.mcin.util.DateConverter" />

    <!--<bean id="stringHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.StringHttpMessageConverter">-->
        <!--<constructor-arg value="UTF-8" index="0"></constructor-arg>-->
        <!--&lt;!&ndash;避免出现乱码 &ndash;&gt;-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/plain;charset=UTF-8</value>-->
                <!--<value>application/json</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 启用默认配置 -->
    <!--<mvc:annotation-driven>-->
    <!--<mvc:message-converters register-defaults="true">-->
    <!--&lt;!&ndash; 配置Fastjson支持 &ndash;&gt;-->
    <!--<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/plain;charset=UTF-8</value>-->
    <!--&lt;!&ndash;<value>application/json</value>&ndash;&gt;-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <!-- 登录拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/cmq/name.json"/> <!-- 需要拦截的 -->
            <mvc:exclude-mapping path="/cmq/getRedis.json"/> <!-- 不拦截的 -->
            <mvc:exclude-mapping path="/cmq/redis.json"/> <!-- 不拦截的 -->
            <mvc:exclude-mapping path="/cmq/getValue.json"/> <!-- 不拦截的 -->
            <bean class="com.mcin.handler.SecurityInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- <mvc:interceptors>
         <mvc:interceptor>
             <mvc:mapping path="/**/**/*.json"/>
             <bean class="com.mcin.interceptor.CorsInterceptor"/>
         </mvc:interceptor>
         <mvc:interceptor>
             <mvc:mapping path="/oauth/**/*.json"/>
             <mvc:exclude-mapping path="/unoauth/**/*.json" />
             <bean class="com.mcin.interceptor.OpenidInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 java.lang.ClassNotFoundException: org.apache.commons.fileupload.FileItemFactory -->
     <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--默认编码-->
        <property name="defaultEncoding" value="utf-8" />
        <!--文件大小最大值-->
        <property name="maxUploadSize" value="10485760000" />
        <!--内存中的最大值-->
        <property name="maxInMemorySize" value="40960" />
    </bean>
     <!--上传文件异常处理-->
     <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop  key="org.springframework.web.multipart.MaxUploadSizeExceededException">/*</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- Shiro的Web过滤器 -->
    <!--  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
         <property name="securityManager" ref="securityManager"/>
         <property name="loginUrl" value="/user/login" />
         <property name="successUrl" value="/user/center?login" />
         <property name="unauthorizedUrl" value="/test/index"/>
         <property name="filters">
             <util:map>
                 <entry key="authc" value-ref="formAuthenticationFilter"/>
             </util:map>
         </property>
         <property name="filterChainDefinitions">
             <value>
                 /resources/** = anon      anon 不需要有登陆权限才可以访问的资源
                 /index.jsp = anon         anon 不需要有登陆权限才可以访问的资源
                 /unauthorized.jsp = authc authc 需要有登陆权限才可以访问的资源，如果没有就跳转到loginUrl
                 /test/index = authc
                 /user/login = authc
                 /user/index = authc
                 /logout = logout
             </value>
         </property>
     </bean> -->
</beans>